<?xml version="1.0" encoding="UTF-8"?>
<blueprint xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://www.osgi.org/xmlns/blueprint/v1.0.0"
           xsi:schemaLocation="http://www.osgi.org/xmlns/blueprint/v1.0.0 http://www.osgi.org/xmlns/blueprint/v1.0.0/blueprint.xsd">
  <bean id="profilingServiceImpl" class="com.pentaho.profiling.model.ProfilingServiceImpl">
    <argument ref="executorService"/>
  </bean>

  <bean id="executorService" class="java.util.concurrent.Executors" factory-method="newCachedThreadPool"
        destroy-method="shutdown" scope="singleton"/>

  <bean id="aggregateProfileServiceImpl" class="com.pentaho.profiling.model.AggregateProfileServiceImpl"
        scope="singleton"/>

  <bean id="streamingProfileFactory" class="com.pentaho.profiling.model.StreamingProfileFactory">
    <argument ref="streamingProfileServiceImpl"/>
    <argument ref="metricContributorsFactoryImpl"/>
  </bean>

  <bean id="streamingProfileServiceImpl" class="com.pentaho.profiling.model.StreamingProfileServiceImpl"
        scope="singleton"/>

  <bean id="metricContributorServiceImpl" class="com.pentaho.profiling.model.MetricContributorServiceImpl">
    <argument ref="metricContributorBundles"/>
    <argument ref="metricObjectMapperFactory"/>
  </bean>

  <bean id="metricContributorsFactoryImpl" class="com.pentaho.profiling.model.MetricContributorsFactoryImpl"
        scope="singleton">
    <argument ref="metricContributorServiceImpl"/>
  </bean>

  <bean id="aggregateProfileFactory" class="com.pentaho.profiling.model.AggregateProfileFactory" scope="singleton">
    <argument ref="profilingServiceImpl"/>
    <argument ref="aggregateProfileServiceImpl"/>
    <argument ref="metricContributorsFactoryImpl"/>
  </bean>

  <bean id="defaultClassLoaderClass" factory-ref="streamingProfileServiceImpl" factory-method="getClass"/>
  <bean id="metricObjectMapperFactory" class="com.pentaho.profiling.api.json.ObjectMapperFactory" scope="singleton">
    <argument ref="defaultClassLoaderClass"/>
  </bean>

  <bean id="sampleProviderImpl" class="com.pentaho.profiling.model.SampleProviderImpl">
    <argument ref="metricContributorsFactoryImpl"/>
    <argument ref="metricContributorServiceImpl"/>
    <argument ref="executorService"/>
  </bean>
  <service ref="sampleProviderImpl" interface="com.pentaho.profiling.api.sample.SampleProvider"/>

  <service id="profilingServiceImplService" ref="profilingServiceImpl"
           interface="com.pentaho.profiling.api.ProfilingService"/>
  <service id="streamingProfileServiceImplService" ref="streamingProfileServiceImpl"
           interface="com.pentaho.profiling.api.StreamingProfileService"/>
  <service id="executorServiceService" ref="executorService"
           interface="java.util.concurrent.ExecutorService"/>
  <service id="profilingServiceNotifierWithHistory" ref="profilingServiceImpl"
           interface="org.pentaho.osgi.notification.api.NotifierWithHistory"/>
  <service id="aggregateProfileFactoryService" ref="aggregateProfileFactory"
           interface="com.pentaho.profiling.api.ProfileFactory"/>
  <service id="streamingProfileFactoryService" ref="streamingProfileFactory"
           interface="com.pentaho.profiling.api.ProfileFactory"/>
  <service id="aggregateProfileServiceImplService" ref="aggregateProfileServiceImpl"
           interface="com.pentaho.profiling.api.AggregateProfileService"/>
  <service id="metricContributorServiceImplService" ref="metricContributorServiceImpl"
           interface="com.pentaho.profiling.api.metrics.MetricContributorService"/>
  <service interface="com.pentaho.profiling.api.metrics.MetricContributorsFactory" ref="metricContributorsFactoryImpl"/>
  <reference-list id="profileFactoryRefList" interface="com.pentaho.profiling.api.ProfileFactory"
                  availability="optional">
    <reference-listener ref="profilingServiceImpl" bind-method="profileFactoryAdded"
                        unbind-method="profileFactoryRemoved"/>
  </reference-list>
  <reference-list id="metricContributorBundles"
                  interface="com.pentaho.profiling.api.metrics.bundle.MetricContributorBundle" availability="optional">
    <reference-listener ref="metricObjectMapperFactory" bind-method="hasClassesAdded"
                        unbind-method="hasClassesRemoved"/>
  </reference-list>
</blueprint>