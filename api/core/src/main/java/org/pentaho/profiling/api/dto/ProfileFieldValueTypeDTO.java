/*******************************************************************************
 *
 * Pentaho Data Profiling
 *
 * Copyright (C) 2002-2015 by Pentaho : http://www.pentaho.com
 *
 *******************************************************************************
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 ******************************************************************************/

package org.pentaho.profiling.api.dto;

import org.pentaho.profiling.api.ProfileFieldValueType;
import org.pentaho.profiling.api.ValueTypeMetrics;

import java.util.Map;

/**
 * ProfileFieldValueTypeDTO is a data transfer object for ProfileFieldValueType created to be sent to front-end
 * applications.
 * <p>
 * Created by bryan on 5/8/15.
 * 
 * @author bryan
 * @author Joao L. M. Pereira (Joao.Pereira{[at]}pentaho.com)
 * @version 1.1
 */

public class ProfileFieldValueTypeDTO {
  private String typeName;
  private Long count;
  private Map<String, ValueTypeMetrics> valueTypeMetricsMap;

  /**
   * Empty constructor, it is required for json serialization.
   */
  public ProfileFieldValueTypeDTO() {

  }
  
  /**
   * Creates a new ProfileFieldValueTypeDTO containing the same information of profileFieldValueType
   * 
   * @param profileFieldValueType
   *          the profile field value type used to create the data transfer object
   */
  public ProfileFieldValueTypeDTO( ProfileFieldValueType profileFieldValueType ) {
    this.typeName = profileFieldValueType.getTypeName();
    this.count = profileFieldValueType.getCount();
    this.valueTypeMetricsMap = profileFieldValueType.getValueTypeMetricsMap();
  }

  /**
   * 
   * @return the value type name of the metrics this ProfileFieldValueTypeDTO contains
   */
  public String getTypeName() {
    return typeName;
  }

  /**
   * 
   * @param typeName
   *          a value type name of the metrics this ProfileFieldValueTypeDTO contains
   */
  public void setTypeName( String typeName ) {
    this.typeName = typeName;
  }

  /**
   * 
   * @return a number representing the existing values in a field that have the same value type assigned to this
   *         ProfileFieldValueTypeDTO
   */
  public Long getCount() {
    return count;
  }

  /**
   * 
   * @param count
   *          the number representing the existing values in a field that have the same value type assigned to this
   *          ProfileFieldValueTypeDTO
   */
  public void setCount( Long count ) {
    this.count = count;
  }

  /**
   * Gets the map containing the ValueTypeMetrics and their ids of this ProfileFieldValueTypeDTO. The map represents the
   * metrics values per id
   * 
   * @return the map whose keys are String ids and values are ValueTypeMetrics
   */
  public Map<String, ValueTypeMetrics> getValueTypeMetricsMap() {
    return valueTypeMetricsMap;
  }

  /**
   * Sets a map containing the ValueTypeMetrics and their ids of this ProfileFieldValueTypeDTO. The map represents the
   * metrics values per id
   * @param valueTypeMetricsMap a map whose keys are String ids and values are ValueTypeMetrics
   */
  public void setValueTypeMetricsMap(
    Map<String, ValueTypeMetrics> valueTypeMetricsMap ) {
    this.valueTypeMetricsMap = valueTypeMetricsMap;
  }

  /**
   * 
   * @param name the id of ValueTypeMetrics to obtain
   * @return the ValueTypeMetrics identified by name
   */
  public ValueTypeMetrics getValueTypeMetrics( String name ) {
    return valueTypeMetricsMap.get( name );
  }

  //OperatorWrap isn't helpful for autogenerated methods
  //CHECKSTYLE:OperatorWrap:OFF
  @Override public boolean equals( Object o ) {
    if ( this == o ) {
      return true;
    }
    if ( o == null || getClass() != o.getClass() ) {
      return false;
    }

    ProfileFieldValueTypeDTO that = (ProfileFieldValueTypeDTO) o;

    if ( typeName != null ? !typeName.equals( that.typeName ) : that.typeName != null ) {
      return false;
    }
    if ( count != null ? !count.equals( that.count ) : that.count != null ) {
      return false;
    }
    return !( valueTypeMetricsMap != null ? !valueTypeMetricsMap.equals( that.valueTypeMetricsMap ) :
      that.valueTypeMetricsMap != null );

  }

  @Override public int hashCode() {
    int result = typeName != null ? typeName.hashCode() : 0;
    result = 31 * result + ( count != null ? count.hashCode() : 0 );
    result = 31 * result + ( valueTypeMetricsMap != null ? valueTypeMetricsMap.hashCode() : 0 );
    return result;
  }

  @Override public String toString() {
    return "ProfileFieldValueTypeDTO{" +
      "typeName='" + typeName + '\'' +
      ", count=" + count +
      ", valueTypeMetricsMap=" + valueTypeMetricsMap +
      '}';
  }
  //CHECKSTYLE:OperatorWrap:ON
}
